import numpy as np
from batman import _quadratic_ld


def test_quadratic(default_params, default_distance):
    expected_result = np.array(
        [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.99986248,
            0.99931412,
            0.9985543,
            0.99766504,
            0.99669959,
            0.99569984,
            0.99470166,
            0.99373764,
            0.99283893,
            0.99203774,
            0.99137274,
            0.99091619,
            0.99074759,
            0.99061728,
            0.99050943,
            0.9904186,
            0.99034147,
            0.99027575,
            0.99021981,
            0.9901724,
            0.99013257,
            0.99009957,
            0.99007285,
            0.99005195,
            0.99003655,
            0.99002642,
            0.99002138,
            0.99002138,
            0.99002642,
            0.99003655,
            0.99005195,
            0.99007285,
            0.99009957,
            0.99013257,
            0.9901724,
            0.99021981,
            0.99027575,
            0.99034147,
            0.9904186,
            0.99050943,
            0.99061728,
            0.99074759,
            0.99091619,
            0.99137274,
            0.99203774,
            0.99283893,
            0.99373764,
            0.99470166,
            0.99569984,
            0.99669959,
            0.99766504,
            0.9985543,
            0.99931412,
            0.99986248,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
        ]
    )
    calculated_result = _quadratic_ld._quadratic_ld(
        default_distance, default_params.rp, default_params.u[0], default_params.u[1], 1
    )
    np.testing.assert_allclose(calculated_result, expected_result, atol=1e-7)


def test_linear(default_params, default_distance):
    expected_result = np.array(
        [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.99981973,
            0.99914313,
            0.99824654,
            0.99722977,
            0.99615346,
            0.99506316,
            0.99399677,
            0.9929881,
            0.99206942,
            0.99127458,
            0.99064591,
            0.9902692,
            0.99023085,
            0.99020311,
            0.99017912,
            0.99015817,
            0.99013979,
            0.99012367,
            0.9901096,
            0.99009741,
            0.99008697,
            0.99007817,
            0.99007094,
            0.99006523,
            0.99006098,
            0.99005816,
            0.99005676,
            0.99005676,
            0.99005816,
            0.99006098,
            0.99006523,
            0.99007094,
            0.99007817,
            0.99008697,
            0.99009741,
            0.9901096,
            0.99012367,
            0.99013979,
            0.99015817,
            0.99017912,
            0.99020311,
            0.99023085,
            0.9902692,
            0.99064591,
            0.99127458,
            0.99206942,
            0.9929881,
            0.99399677,
            0.99506316,
            0.99615346,
            0.99722977,
            0.99824654,
            0.99914313,
            0.99981973,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
        ]
    )
    calculated_result = _quadratic_ld._quadratic_ld(
        default_distance, default_params.rp, default_params.u[0], 0.0, 1
    )
    np.testing.assert_allclose(calculated_result, expected_result, atol=1e-7)
